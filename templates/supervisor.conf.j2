[supervisord]
nodaemon=false

{% if supervisor_webserver|bool %}
[inet_http_server]
port={{ supervisor_webserver_port }}
{% if supervisor_webserver_username|bool %}
username={{ supervisor_webserver_username }}
password={{ supervisor_webserver_password }}
{% endif %}
{% endif %}

{% if supervisor_manage_slurm|bool %}
[program:munge]
user=root
command=/bin/bash -c "mkdir -p /var/run/munge && /usr/sbin/munged -F"
redirect_stderr = true
priority        = 100
stopasgroup     = true

[program:slurmctld]
user=root
command=/bin/bash -c "/usr/bin/python /usr/sbin/configure_slurm.py && /usr/sbin/slurmctld -D -L {{supervisor_slurm_config_dir}}/slurmctld.log"
redirect_stderr=true
autorestart     = true
priority        = 200
stopasgroup     = true

[program:slurmd]
user=root
command=/usr/sbin/slurmd -D -L {{supervisor_slurm_config_dir}}/slurmd.log
redirect_stderr = true
autorestart     = true
priority        = 300
{% endif %}

{% if galaxy_extras_config_condor|bool %}
[program:condor]
user=root
command=condor_master
redirect_stderr = true
autorestart     = true
priority        = 100
{% endif %}


{% if supervisor_manage_postgres|bool %}
{% if ansible_virtualization_type != "docker" %}
[program:pre_postgresql]
user            = root
startsecs       = 0
command         = /bin/bash -c "install -d -m 2775 -o postgres -g postgres /var/run/postgresql"
{% endif %}

[program:postgresql]
user            = postgres
command         = /usr/lib/postgresql/{{ postgresql_version }}/bin/postmaster {{ supervisor_postgres_options }}
process_name    = %(program_name)s
stopsignal      = INT
autostart       = true
autorestart     = true
redirect_stderr = true
priority        = 100
{% endif %}

{% if supervisor_manage_proftp|bool %}
[program:proftpd]
{% if proftpd_nat_masquerade %}
command         = bash -c " export MASQUERADE_ADDRESS={{ proftpd_masquerade_address }} && /usr/sbin/proftpd -n -c {{proftpd_conf_path}}"
{% else %}
command         = /usr/sbin/proftpd -n -c {{proftpd_conf_path}}
{% endif %}
autostart       = {{ supervisor_proftpd_autostart }}
autorestart     = true
stopasgroup     = true
killasgroup     = true
{% endif %}

{% if supervisor_manage_nginx|bool %}
[program:nginx]
command         = /usr/sbin/nginx
directory       = /
umask           = 022
autostart       = true
autorestart     = unexpected
startsecs       = 5
exitcodes       = 0
user            = root
priority        = 200
{% endif %}

[program:galaxy_web]
{% if galaxy_uwsgi|bool %}
{% if galaxy_uwsgi_static_conf|bool %}
command         = {{ galaxy_venv_dir }}/bin/uwsgi --virtualenv {{ galaxy_venv_dir }} --ini-paste {{ galaxy_config_file }} --logdate --master --processes {{ galaxy_web_processes }} --threads {{ uwsgi_threads }} --logto {{ uwsgi_log }} --socket 127.0.0.1:4001 --pythonpath lib --stats 127.0.0.1:9191
{% else %}
command         = {{ galaxy_venv_dir }}/bin/uwsgi --virtualenv {{ galaxy_venv_dir }} --ini-paste {{ galaxy_config_file }} --logdate --master --processes %(ENV_UWSGI_PROCESSES)s --threads %(ENV_UWSGI_THREADS)s --logto {{ uwsgi_log }} --socket 127.0.0.1:4001 --pythonpath lib --stats 127.0.0.1:9191
{% endif %}
directory       = {{ galaxy_server_dir }}
umask           = 022
autostart       = true
autorestart     = true
startsecs       = {{ supervisor_galaxy_startsecs }}
user            = {{ galaxy_user_name }}
environment     = PATH={{ galaxy_venv_dir }}:{{ galaxy_venv_dir }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
numprocs        = 1
stopsignal      = INT
startretries    = {{ supervisor_galaxy_startretries }}
{% else %}
# template cache hack https://github.com/galaxyproject/planemo-machine/issues/38
command         = /bin/bash -c "rm -rf {{ galaxy_server_dir }}/database/template_cache; {{ galaxy_venv_dir }}/bin/python ./scripts/paster.py serve {{ galaxy_config_file }} --server-name=web%(process_num)s --pid-file={{ galaxy_log_dir }}/galaxy_web%(process_num)s.pid --log-file={{ galaxy_log_dir }}/galaxy_web%(process_num)s.log"
directory       = {{ galaxy_server_dir }}
process_name    = web%(process_num)s
numprocs        = {{ galaxy_web_processes }}
umask           = 022
autostart       = true
autorestart     = true
startsecs       = {{ supervisor_galaxy_startsecs }}
user            = {{ galaxy_user_name }}
environment     = PATH={{ galaxy_venv_dir }}:{{ galaxy_venv_dir }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
startretries    = {{ supervisor_galaxy_startretries }}
# needed for bash wrapper
stopasgroup     = true
{% endif %}

[program:handler]
{% if not galaxy_paste_handlers|bool %}
command         = {{ galaxy_venv_dir }}/bin/python ./lib/galaxy/main.py -c {{ galaxy_config_file }} --server-name=handler%(process_num)s --log-file={{ galaxy_log_dir }}/handler%(process_num)s.log
{% else %}
command         = {{ galaxy_venv_dir }}/bin/python ./scripts/paster.py serve {{ galaxy_config_file }} --server-name=handler%(process_num)s --pid-file={{ galaxy_log_dir }}/handler%(process_num)s.pid --log-file={{ galaxy_log_dir }}/handler%(process_num)s.log
{% endif %}
directory       = {{ galaxy_server_dir }}
process_name    = handler%(process_num)s
numprocs        = {{ galaxy_handler_processes }}
umask           = 022
autostart       = true
autorestart     = true
startsecs       = {{ supervisor_galaxy_startsecs }}
user            = {{ galaxy_user_name }}
startretries    = {{ supervisor_galaxy_startretries }}

{% if supervisor_manage_reports|bool %}
[program:reports]
command         = {{ galaxy_venv_dir }}/bin/python ./scripts/paster.py serve {{ galaxy_reports_config_file }} --server-name=main --pid-file={{ galaxy_log_dir }}/reports.pid --log-file={{ galaxy_reports_log }}
directory       = {{ galaxy_server_dir }}
process_name    = reports
umask           = 022
autostart       = {{ supervisor_reports_autostart }}
autorestart     = true
startsecs       = {{ supervisor_galaxy_startsecs }}
user            = {{ galaxy_user_name }}
startretries    = {{ supervisor_galaxy_startretries }}
{% endif %}

{% if supervisor_manage_toolshed|bool %}
[program:toolshed]
command         = {{ galaxy_venv_dir }}/bin/python ./scripts/paster.py serve {{ galaxy_toolshed_config_file }} --server-name=main --pid-file={{ galaxy_log_dir }}/toolshed.pid --log-file={{ galaxy_log_dir }}/toolshed.log
directory       = {{ galaxy_server_dir }}
process_name    = toolshed
umask           = 022
autostart       = true
autorestart     = true
startsecs       = {{ supervisor_galaxy_startsecs }}
user            = {{ galaxy_user_name }}
startretries    = {{ supervisor_galaxy_startretries }}
{% endif %}

{% if supervisor_manage_ie_proxy|bool %}
[program:galaxy_nodejs_proxy]
directory       = {{ galaxy_server_dir }}
command         = {{ galaxy_server_dir }}/lib/galaxy/web/proxy/js/lib/main.js --sessions database/session_map.sqlite --ip 0.0.0.0 --port 8800
autostart       = {{ supervisor_ie_proxy_autostart }}
autorestart     = unexpected
user            = {{ galaxy_user_name }}
startsecs       = 5
redirect_stderr = true
{% endif %}

{% if supervisor_manage_docker|bool %}
[program:docker]
directory       = /
command         = /usr/bin/docker daemon --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 -s {{ galaxy_extras_docker_storage_backend }}
autostart       = {{ supervisor_docker_autostart }}
autorestart     = {{ supervisor_docker_autorestart }}
user            = root
startsecs       = 5
redirect_stderr = true
{% endif %}

[group:galaxy]
{% if supervisor_manage_ie_proxy|bool %}
programs = handler, galaxy_web, galaxy_nodejs_proxy
{% else %}
programs = handler, galaxy_web
{% endif %}
